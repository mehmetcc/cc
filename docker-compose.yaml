services:
  user-service:
    build:
      context: ./user
      dockerfile: src/main/docker/Dockerfile.quarkus
    ports:
      - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - USER_SERVICE_PORT
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    networks:
      - cc-network
    command: >
      ./mvnw quarkus:dev -Dquarkus.http.host=0.0.0.0
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    environment:
      - POSTGRES_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cc-network
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      - PGADMIN_PORT
      - PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD
    volumes:
      - pgadmin_volume:/var/lib/pgadmin
    networks:
      - cc-network

volumes:
  postgres_volume:
  pgadmin_volume:

networks:
  cc-network:
